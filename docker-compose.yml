name: syncit

services:
  frontend:
    build:
      context: ./frontend
      target: ${BUILD_TARGET}
    volumes:
      - ./frontend:/project/frontend
      - /project/frontend/node_modules
      - frontend_dist:/project/frontend/dist
      - static_volume:/project/django/django_static/
    ports:
      - "80:80"
      - "3000:3000"
    depends_on:
      django:
        condition: service_healthy
    networks:
      - app-network

  django:
    build:
      context: ./backend/django
      target: ${BUILD_TARGET}
    volumes:
      - ./backend/django:/project/backend/django
      - static_volume:/project/backend/django/django_static/
    ports:
      - "8000:8000"
    env_file:
      - .env
    healthcheck:
      test: "curl -f http://localhost:8000/health-check/"
      interval: 5s
      timeout: 5s
      retries: 10
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app-network

  go:
    build:
      context: ./backend/go
      target: ${BUILD_TARGET}
    volumes:
      - ./backend/go:/project/backend/go
    ports:
      - "8080:8080"
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      django:
        condition: service_healthy
    networks:
      - app-network

  postgres:
    image: postgres:16.3-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    env_file:
      - .env
    healthcheck:
      test: "pg_isready -h ${POSTGRES_HOST} -p ${POSTGRES_PORT} -d ${POSTGRES_DB}"
      interval: 5s
      timeout: 5s
    networks:
      - app-network

  redis:
    image: redis:7.2.5-alpine
    hostname: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: "redis-cli ping"
      interval: 5s
      timeout: 5s
    networks:
      - app-network

  celery:
    build:
      context: ./backend/django
      target: ${BUILD_TARGET}
    command: celery -A core.celery.app worker -l debug
    healthcheck:
      test: "celery inspect ping"
      interval: 5s
      timeout: 5s
    depends_on:
      django:
        condition: service_healthy
    env_file:
      - .env
    networks:
      - app-network

  celery-beat:
    build:
      context: ./backend/django
      target: ${BUILD_TARGET}
    env_file:
      - .env
    depends_on:
      celery:
        condition: service_healthy
    command: celery -A core.celery.app beat -l debug
    networks:
      - app-network

  flower:
    build:
      context: ./backend/django
      target: ${BUILD_TARGET}
    command: celery -A core.celery.app flower -l debug
    env_file:
      - .env
    healthcheck:
      test: "curl -f http://localhost:5555"
      interval: 5s
      timeout: 5s
    depends_on:
      celery:
        condition: service_healthy
    ports:
      - "5555:5555"
    networks:
      - app-network

  notifier:
    image: lorcas/docker-telegram-notifier
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    env_file:
      - .env
    labels:
      telegram-notifier.monitor: false

volumes:
  static_volume:
  frontend_dist:
  postgres_data:

networks:
  app-network:
    driver: bridge
