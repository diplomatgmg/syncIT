from apps.hard_skill.models import UnknownHardSkill

HARD_SKILL_MAPPING = {
    ".net": ".NET",
    ".net core": ".NET",
    ".net framework": ".NET",
    "1c": "1С",
    "1с-битрикс": "1С-Битрикс",
    "1c-битрикс": "1С-Битрикс",
    "ajax": "Ajax",
    "api": "API",
    "agile": "Agile",
    "asp net": "ASP.NET",
    "aspnet": "ASP.NET",
    "asp.net": "ASP.NET",
    "angular": "Angular",
    "angular js": "Angular",
    "angular.js": "Angular",
    "ansible": "Ansible",
    "assembly": "Assembly",
    "aws": "AWS",
    "bash": "Bash",
    "babel": "Babel",
    "bootstrap": "Bootstrap",
    "bitbucket": "BitBucket",
    "битрикс24": "Битрикс24",
    "битрикс 24": "Битрикс24",
    "bitrix24": "Битрикс24",
    "bitrix 24": "Битрикс24",
    "css": "CSS",
    "css3": "CSS",
    "css 3": "CSS",
    "scss": "SASS",
    "sass": "SASS",
    "sentry": "Sentry",
    "scrum": "Scrum",
    "symfony": "Symfony",
    "slack": "Slack",
    "c": "C",
    "c#": "C#",
    "c++": "C++",
    "ci/cd": "CI/CD",
    "celery": "Celery",
    "confluence": "Confluence",
    "clickhouse": "ClickHouse",
    "cucumber": "Cucumber",
    "ddd": "DDD",
    "delphi": "Delphi",
    "dart": "Dart",
    "devops": "DevOps",
    "django": "Django",
    "django rest": "Django REST Framework",
    "django framework": "Django REST Framework",
    "django rest framework": "Django REST Framework",
    "rest framework": "Django REST Framework",
    "docker": "Docker",
    "docker compose": "Docker Compose",
    "docker-compose": "Docker Compose",
    "express": "Express",
    "express js": "Express",
    "express.js": "Express",
    "erlang": "Erlang",
    "emberjs": "Ember.js",
    "ember js": "Ember.js",
    "ember.js": "Ember.js",
    "electron": "Electron",
    "elasticsearch": "Elasticsearch",
    "elastic search": "Elasticsearch",
    "elixir": "Elixir",
    "f#": "F#",
    "fastapi": "FastAPI",
    "fast api": "FastAPI",
    "figma": "Figma",
    "flask": "Flask",
    "flutter": "Flutter",
    "git": "Git",
    "grails": "Grails",
    "github": "GitHub",
    "gitlab": "GitLab",
    "go": "Go",
    "golang": "Go",
    "go lang": "Go",
    "graphql": "GraphQL",
    "grafana": "Grafana",
    "html": "HTML",
    "html5": "HTML",
    "html 5": "HTML",
    "haskell": "Haskell",
    "http": "HTTP",
    "jquery": "JQuery",
    "js": "JavaScript",
    "json": "JSON",
    "javascript": "JavaScript",
    "java script": "JavaScript",
    "java": "Java",
    "jenkins": "Jenkins",
    "jira": "Jira",
    "jest": "Jest",
    "kafka": "Kafka",
    "kanban": "Kanban",
    "kotlin": "Kotlin",
    "kubernetes": "Kubernetes",
    "k8s": "Kubernetes",
    "laravel": "Laravel",
    "linux": "Linux",
    "lua": "Lua",
    "less": "Less",
    "macos": "MacOS",
    "mariadb": "MariaDB",
    "mongodb": "MongoDB",
    "meteor": "Meteor",
    "mercurial": "Mercurial",
    "mysql": "MySQL",
    "mssql": "MS SQL",
    "ms sql": "MS SQL",
    "nginx": "Nginx",
    "node.js": "Node.js",
    "nodejs": "Node.js",
    "node js": "Node.js",
    "nextjs": "Next.js",
    "next.js": "Next.js",
    "next js": "Next.js",
    "nuxtjs": "Nuxt.js",
    "nuxt.js": "Nuxt.js",
    "nuxt js": "Nuxt.js",
    "nestjs": "NestJS",
    "nest.js": "NestJS",
    "nest js": "NestJS",
    "nosql": "NoSQL",
    "no sql": "NoSQL",
    "oop": "ООП",
    "ооп": "ООП",
    "oracle": "Oracle",
    "php": "PHP",
    "postgresql": "PostgreSQL",
    "postgres": "PostgreSQL",
    "postgre sql": "PostgreSQL",
    "postgres sql": "PostgreSQL",
    "postgresql sql": "PostgreSQL",
    "psql": "PostgreSQL",
    "python": "Python",
    "python3": "Python",
    "python 3": "Python",
    "pytest": "Pytest",
    "pytorch": "PyTorch",
    "prometheus": "Prometheus",
    "perl": "Perl",
    "pandas": "Pandas",
    "postman": "Postman",
    "rest": "REST API",
    "restapi": "REST API",
    "rest api": "REST API",
    "restful": "REST API",
    "restful api": "REST API",
    "rest-api": "REST API",
    "rabbit": "RabbitMQ",
    "rabbit mq": "RabbitMQ",
    "rabbitmq": "RabbitMQ",
    "react": "React",
    "react.js": "React",
    "react js": "React",
    "reactnative": "React Native",
    "react native": "React Native",
    "redis": "Redis",
    "redux": "Redux",
    "redux toolkit": "Redux Toolkit",
    "redux-toolkit": "Redux Toolkit",
    "react testing library": "React Testing Library",
    "react-query": "React Query",
    "react query": "React Query",
    "rtk-query": "RTK Query",
    "rtk query": "RTK Query",
    "ruby": "Ruby",
    "ruby on rails": "Ruby on Rails",
    "rust": "Rust",
    "solid": "SOLID",
    "svelte": "Svelte",
    "selenium": "Selenium",
    "seo": "SEO",
    "seo оптимизация": "SEO",
    "seo-оптимизация": "SEO",
    "sql": "SQL",
    "sqlite": "SQLite",
    "sqlalchemy": "SQLAlchemy",
    "sql alchemy": "SQLAlchemy",
    "spring": "Spring Framework",
    "spring framework": "Spring Framework",
    "spring boot": "Spring Boot",
    "swift": "Swift",
    "swagger": "Swagger",
    "soap": "SOAP",
    "soap api": "SOAP API",
    "tcp/ip": "TCP/IP",
    "tailwind": "Tailwind",
    "tailwindcss": "Tailwind",
    "tailwind css": "Tailwind",
    "ts": "TypeScript",
    "typescript": "TypeScript",
    "type script": "TypeScript",
    "tensorflow": "TensorFlow",
    "ubuntu": "Ubuntu",
    "ui": "UI/UX",
    "ux": "UI/UX",
    "ui/ux": "UI/UX",
    "unix": "Linux",  # Чтобы не делать 100500 скиллов
    "vite": "Vite",
    "vue": "Vue",
    "vue3": "Vue",
    "vue js": "Vue",
    "vuejs": "Vue",
    "vue.js": "Vue",
    "vuex": "Vuex",
    "webpack": "Webpack",
    "websocket": "WebSocket",
    "windows": "Windows",
    "web api": "API",
    "xhtml": "XHTML",
    "xml": "XML",
    "yii": "Yii",
    "yii2": "Yii",
    "zabbix": "Zabbix",
}

# Дефотные навыкы, которые имеют selectable=false
# Играют роль "Категории навыков"
default = (
    "Backend",
    "Frontend",
    "Базы данных",
    "JavaScript/TypeScript",
    "Языки программирования",
    "Инструменты",
    "Системы контроля версий",
    "DevOps",
    "Методологии",
    "Операционные системы",
    "Архитектурные принципы",
    "Тестирование",
    "Скриптовые языки",
)


def normalize_hard_skill(skill: str) -> str | None:
    normalized_skill = HARD_SKILL_MAPPING.get(skill.lower())
    if normalized_skill:
        return normalized_skill

    if skill not in default:
        UnknownHardSkill.objects.create(name=skill)

    return None
